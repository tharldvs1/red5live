<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   minWidth="400"
			   minHeight="300"
			   creationComplete="init()">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>


	<fx:Script>
		<![CDATA[
			import flash.display.*;
			import flash.events.*;
			import flash.media.Camera;
			import flash.media.Video;
			import flash.net.*;
			import flash.utils.*;
			
			import mx.controls.Alert;
			
			import org.osmf.events.MediaPlayerStateChangeEvent;
			import org.osmf.events.TimeEvent;
			
			private var nc:NetConnection;
			private var ns:NetStream;
			
			private function init():void
			{
				nc=new NetConnection();
				nc.addEventListener(NetStatusEvent.NET_STATUS, connectHandler);
				nc.client=this;
				
				playHandler(Statics.streamServerPlay() + "/" + Statics.streamNAME);
			}

			private function connectHandler(evt:NetStatusEvent):void
			{
				
				/**
				 * NetStream.Play.UnpublishNotify  发布取消
				 * 
				 */ 
				
				Test.t(evt.info.code);
				
				if (evt.info.code == "NetConnection.Connect.Success")
				{
					ns = new NetStream(nc);
					var _client:Object = new Object();
					_client.onMetaData = onMetaData;
					ns.client = _client;
					ns.addEventListener(NetStatusEvent.NET_STATUS, connectHandler);
				}
				else if(evt.info.code == "NetStream.Play.UnpublishNotify") //发布取消
				{
					stopHandler();
				}
				else
				{
					
					//Alert.show("服务器连接失败");
					//Test.t(evt.info.code);
				}
				
				
				
			}
			private function onMetaData(data:Object):void 
			{
			}

			private function playHandler(_source:String):void
			{
				playerID.source=_source;
			}


			private function playerEventHandler(event:MediaPlayerStateChangeEvent):void
			{
				Test.t(event.state);
			}

			private function durationChangeHandler(event:TimeEvent):void //捕获直播不分派此事件
			{
				//Test.t(event.time);
				stopHandler();
			}
			private function completeHandler(event:TimeEvent):void
			{
				//Test.t(event);
				
			}
			private function stopHandler():void
			{
				playerID.stop();
				playHandler(null);
				Alert.show("直播暂停，请刷新后重试");
			}
		]]>
	</fx:Script>


	<s:VideoPlayer id="playerID"
				   width="400"
				   height="300"
				   autoPlay="true"
				   loop="false"
				   mediaPlayerStateChange="playerEventHandler(event)"
				   durationChange="durationChangeHandler(event)" complete="completeHandler(event)"
				   currentTimeChange="completeHandler(event)"/>
	<!--
		 mediaPlayerStateChange="playerEventHandler(event)"
		 durationChange="playerEventHandler(event)"


	-->



	<!--
		 <s:VideoDisplay id="playerID"
		 width="100%" height="100%"
		 autoPlay="false"
		 loop="true"/>
	-->


</s:Application>
